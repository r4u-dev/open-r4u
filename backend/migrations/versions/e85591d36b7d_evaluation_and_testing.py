"""evaluation and testing

Revision ID: e85591d36b7d
Revises: e8535e383ae8
Create Date: 2025-10-24 19:25:36.552414

"""
from typing import Sequence, Union

from alembic import op
import sqlalchemy as sa
from sqlalchemy.dialects import postgresql

# revision identifiers, used by Alembic.
revision: str = 'e85591d36b7d'
down_revision: Union[str, Sequence[str], None] = 'e8535e383ae8'
branch_labels: Union[str, Sequence[str], None] = None
depends_on: Union[str, Sequence[str], None] = None


def upgrade() -> None:
    """Upgrade schema."""
    # ### commands auto generated by Alembic - please adjust! ###
    op.create_table('evaluation',
    sa.Column('id', sa.Integer(), autoincrement=True, nullable=False),
    sa.Column('implementation_id', sa.Integer(), nullable=False),
    sa.Column('task_id', sa.Integer(), nullable=False),
    sa.Column('status', sa.Enum('PENDING', 'RUNNING', 'COMPLETED', 'FAILED', name='evaluation_status'), nullable=False),
    sa.Column('started_at', sa.DateTime(timezone=True), nullable=True),
    sa.Column('completed_at', sa.DateTime(timezone=True), nullable=True),
    sa.Column('test_case_count', sa.Integer(), nullable=True),
    sa.Column('error', sa.Text(), nullable=True),
    sa.Column('grader_scores', sa.JSON().with_variant(postgresql.JSONB(astext_type=sa.Text()), 'postgresql'), nullable=False),
    sa.Column('quality_score', sa.Float(), nullable=True),
    sa.Column('avg_cost', sa.Float(), nullable=True),
    sa.Column('avg_execution_time_ms', sa.Float(), nullable=True),
    sa.Column('created_at', sa.DateTime(timezone=True), server_default=sa.text('now()'), nullable=False),
    sa.Column('updated_at', sa.DateTime(timezone=True), server_default=sa.text('now()'), nullable=False),
    sa.ForeignKeyConstraint(['implementation_id'], ['implementation.id'], name=op.f('fk_evaluation_implementation_id_implementation'), ondelete='CASCADE'),
    sa.ForeignKeyConstraint(['task_id'], ['task.id'], name=op.f('fk_evaluation_task_id_task'), ondelete='CASCADE'),
    sa.PrimaryKeyConstraint('id', name=op.f('pk_evaluation'))
    )
    op.create_index('ix_evaluation_implementation_id', 'evaluation', ['implementation_id'], unique=False)
    op.create_index('ix_evaluation_started_at', 'evaluation', ['started_at'], unique=False)
    op.create_index('ix_evaluation_status', 'evaluation', ['status'], unique=False)
    op.create_index('ix_evaluation_task_id', 'evaluation', ['task_id'], unique=False)
    op.create_table('evaluation_config',
    sa.Column('id', sa.Integer(), autoincrement=True, nullable=False),
    sa.Column('task_id', sa.Integer(), nullable=False),
    sa.Column('quality_weight', sa.Float(), nullable=False),
    sa.Column('cost_weight', sa.Float(), nullable=False),
    sa.Column('time_weight', sa.Float(), nullable=False),
    sa.Column('grader_ids', sa.JSON().with_variant(postgresql.JSONB(astext_type=sa.Text()), 'postgresql'), nullable=False),
    sa.Column('created_at', sa.DateTime(timezone=True), server_default=sa.text('now()'), nullable=False),
    sa.Column('updated_at', sa.DateTime(timezone=True), server_default=sa.text('now()'), nullable=False),
    sa.CheckConstraint('task_id IS NOT NULL', name=op.f('ck_evaluation_config_`ck_evaluation_config_task_id_not_null`')),
    sa.ForeignKeyConstraint(['task_id'], ['task.id'], name=op.f('fk_evaluation_config_task_id_task'), ondelete='CASCADE'),
    sa.PrimaryKeyConstraint('id', name=op.f('pk_evaluation_config')),
    sa.UniqueConstraint('task_id', name=op.f('uq_evaluation_config_task_id'))
    )
    op.create_index('ix_evaluation_config_task_id', 'evaluation_config', ['task_id'], unique=False)
    op.create_table('target_task_metrics',
    sa.Column('id', sa.Integer(), autoincrement=True, nullable=False),
    sa.Column('task_id', sa.Integer(), nullable=False),
    sa.Column('cost', sa.Float(), nullable=True),
    sa.Column('time_ms', sa.Float(), nullable=True),
    sa.Column('last_updated_at', sa.DateTime(timezone=True), nullable=True),
    sa.Column('created_at', sa.DateTime(timezone=True), server_default=sa.text('now()'), nullable=False),
    sa.Column('updated_at', sa.DateTime(timezone=True), server_default=sa.text('now()'), nullable=False),
    sa.ForeignKeyConstraint(['task_id'], ['task.id'], name=op.f('fk_target_task_metrics_task_id_task'), ondelete='CASCADE'),
    sa.PrimaryKeyConstraint('id', name=op.f('pk_target_task_metrics')),
    sa.UniqueConstraint('task_id', name=op.f('uq_target_task_metrics_task_id'))
    )
    op.create_index('ix_target_task_metrics_last_updated', 'target_task_metrics', ['last_updated_at'], unique=False)
    op.create_index('ix_target_task_metrics_task_id', 'target_task_metrics', ['task_id'], unique=False)
    op.create_table('test_case',
    sa.Column('id', sa.Integer(), autoincrement=True, nullable=False),
    sa.Column('task_id', sa.Integer(), nullable=False),
    sa.Column('description', sa.String(length=500), nullable=True),
    sa.Column('arguments', sa.JSON().with_variant(postgresql.JSONB(astext_type=sa.Text()), 'postgresql'), nullable=True),
    sa.Column('expected_output', sa.Text(), nullable=False),
    sa.Column('created_at', sa.DateTime(timezone=True), server_default=sa.text('now()'), nullable=False),
    sa.Column('updated_at', sa.DateTime(timezone=True), server_default=sa.text('now()'), nullable=False),
    sa.ForeignKeyConstraint(['task_id'], ['task.id'], name=op.f('fk_test_case_task_id_task'), ondelete='CASCADE'),
    sa.PrimaryKeyConstraint('id', name=op.f('pk_test_case'))
    )
    op.create_index('ix_test_case_task_id', 'test_case', ['task_id'], unique=False)
    op.drop_column('execution_result', 'input')
    op.alter_column('task', 'response_schema',
               existing_type=postgresql.JSON(astext_type=sa.Text()),
               type_=sa.JSON().with_variant(postgresql.JSONB(astext_type=sa.Text()), 'postgresql'),
               existing_nullable=True)
    # ### end Alembic commands ###


def downgrade() -> None:
    """Downgrade schema."""
    # ### commands auto generated by Alembic - please adjust! ###
    op.alter_column('task', 'response_schema',
               existing_type=sa.JSON().with_variant(postgresql.JSONB(astext_type=sa.Text()), 'postgresql'),
               type_=postgresql.JSON(astext_type=sa.Text()),
               existing_nullable=True)
    op.add_column('execution_result', sa.Column('input', postgresql.JSONB(astext_type=sa.Text()), autoincrement=False, nullable=True))
    op.drop_index('ix_test_case_task_id', table_name='test_case')
    op.drop_table('test_case')
    op.drop_index('ix_target_task_metrics_task_id', table_name='target_task_metrics')
    op.drop_index('ix_target_task_metrics_last_updated', table_name='target_task_metrics')
    op.drop_table('target_task_metrics')
    op.drop_index('ix_evaluation_config_task_id', table_name='evaluation_config')
    op.drop_table('evaluation_config')
    op.drop_index('ix_evaluation_task_id', table_name='evaluation')
    op.drop_index('ix_evaluation_status', table_name='evaluation')
    op.drop_index('ix_evaluation_started_at', table_name='evaluation')
    op.drop_index('ix_evaluation_implementation_id', table_name='evaluation')
    op.drop_table('evaluation')
    # ### end Alembic commands ###
