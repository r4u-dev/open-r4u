"""add_grader_and_grade

Revision ID: cb5cec1b033d
Revises: 7a8b9c0d1e2f
Create Date: 2025-10-23 11:46:43.304075

"""
from typing import Sequence, Union

from alembic import op
import sqlalchemy as sa
from sqlalchemy.dialects import postgresql

# revision identifiers, used by Alembic.
revision: str = 'cb5cec1b033d'
down_revision: Union[str, Sequence[str], None] = '7a8b9c0d1e2f'
branch_labels: Union[str, Sequence[str], None] = None
depends_on: Union[str, Sequence[str], None] = None


def upgrade() -> None:
    """Upgrade schema."""
    # ### commands auto generated by Alembic - please adjust! ###
    op.create_table('grader',
    sa.Column('id', sa.Integer(), autoincrement=True, nullable=False),
    sa.Column('project_id', sa.Integer(), nullable=False),
    sa.Column('name', sa.String(length=255), nullable=False),
    sa.Column('description', sa.Text(), nullable=True),
    sa.Column('prompt', sa.Text(), nullable=False),
    sa.Column('grade_type', sa.Enum('FLOAT', 'BOOLEAN', name='grade_type'), nullable=False),
    sa.Column('model', sa.String(length=255), nullable=False),
    sa.Column('temperature', sa.Float(), nullable=True),
    sa.Column('reasoning', sa.JSON().with_variant(postgresql.JSONB(astext_type=sa.Text()), 'postgresql'), nullable=True),
    sa.Column('response_schema', sa.JSON().with_variant(postgresql.JSONB(astext_type=sa.Text()), 'postgresql'), nullable=True),
    sa.Column('max_output_tokens', sa.Integer(), nullable=False),
    sa.Column('is_active', sa.Boolean(), nullable=False),
    sa.Column('created_at', sa.DateTime(timezone=True), server_default=sa.text('now()'), nullable=False),
    sa.Column('updated_at', sa.DateTime(timezone=True), server_default=sa.text('now()'), nullable=False),
    sa.ForeignKeyConstraint(['project_id'], ['project.id'], name=op.f('fk_grader_project_id_project'), ondelete='CASCADE'),
    sa.PrimaryKeyConstraint('id', name=op.f('pk_grader'))
    )
    op.create_index('ix_grader_is_active', 'grader', ['is_active'], unique=False)
    op.create_index('ix_grader_name', 'grader', ['name'], unique=False)
    op.create_index('ix_grader_project_id', 'grader', ['project_id'], unique=False)
    op.create_table('grade',
    sa.Column('id', sa.Integer(), autoincrement=True, nullable=False),
    sa.Column('grader_id', sa.Integer(), nullable=False),
    sa.Column('trace_id', sa.Integer(), nullable=True),
    sa.Column('execution_result_id', sa.Integer(), nullable=True),
    sa.Column('score_float', sa.Float(), nullable=True),
    sa.Column('score_boolean', sa.Boolean(), nullable=True),
    sa.Column('reasoning', sa.Text(), nullable=True),
    sa.Column('confidence', sa.Float(), nullable=True),
    sa.Column('grader_response', sa.JSON().with_variant(postgresql.JSONB(astext_type=sa.Text()), 'postgresql'), nullable=True),
    sa.Column('grading_started_at', sa.DateTime(timezone=True), nullable=False),
    sa.Column('grading_completed_at', sa.DateTime(timezone=True), nullable=True),
    sa.Column('error', sa.Text(), nullable=True),
    sa.Column('prompt_tokens', sa.Integer(), nullable=True),
    sa.Column('completion_tokens', sa.Integer(), nullable=True),
    sa.Column('total_tokens', sa.Integer(), nullable=True),
    sa.Column('cached_tokens', sa.Integer(), nullable=True),
    sa.Column('reasoning_tokens', sa.Integer(), nullable=True),
    sa.Column('system_fingerprint', sa.String(length=255), nullable=True),
    sa.Column('created_at', sa.DateTime(timezone=True), server_default=sa.text('now()'), nullable=False),
    sa.Column('updated_at', sa.DateTime(timezone=True), server_default=sa.text('now()'), nullable=False),
    sa.CheckConstraint('(trace_id IS NULL) != (execution_result_id IS NULL)', name=op.f('ck_grade_`ck_grade_exactly_one_target`')),
    sa.ForeignKeyConstraint(['execution_result_id'], ['execution_result.id'], name=op.f('fk_grade_execution_result_id_execution_result'), ondelete='CASCADE'),
    sa.ForeignKeyConstraint(['grader_id'], ['grader.id'], name=op.f('fk_grade_grader_id_grader'), ondelete='CASCADE'),
    sa.ForeignKeyConstraint(['trace_id'], ['trace.id'], name=op.f('fk_grade_trace_id_trace'), ondelete='CASCADE'),
    sa.PrimaryKeyConstraint('id', name=op.f('pk_grade'))
    )
    op.create_index('ix_grade_execution_result_id', 'grade', ['execution_result_id'], unique=False)
    op.create_index('ix_grade_grader_id', 'grade', ['grader_id'], unique=False)
    op.create_index('ix_grade_grading_started_at', 'grade', ['grading_started_at'], unique=False)
    op.create_index('ix_grade_trace_id', 'grade', ['trace_id'], unique=False)
    # ### end Alembic commands ###


def downgrade() -> None:
    """Downgrade schema."""
    # ### commands auto generated by Alembic - please adjust! ###
    op.drop_index('ix_grade_trace_id', table_name='grade')
    op.drop_index('ix_grade_grading_started_at', table_name='grade')
    op.drop_index('ix_grade_grader_id', table_name='grade')
    op.drop_index('ix_grade_execution_result_id', table_name='grade')
    op.drop_table('grade')
    op.drop_index('ix_grader_project_id', table_name='grader')
    op.drop_index('ix_grader_name', table_name='grader')
    op.drop_index('ix_grader_is_active', table_name='grader')
    op.drop_table('grader')
    # ### end Alembic commands ###
