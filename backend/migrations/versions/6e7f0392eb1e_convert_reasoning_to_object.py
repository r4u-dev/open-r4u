"""convert_reasoning_to_object

Revision ID: 6e7f0392eb1e
Revises: 5cd8050268df
Create Date: 2025-10-17 16:09:53.709819

"""
from typing import Sequence, Union

from alembic import op
import sqlalchemy as sa
from sqlalchemy.dialects import postgresql

# revision identifiers, used by Alembic.
revision: str = '6e7f0392eb1e'
down_revision: Union[str, Sequence[str], None] = '5cd8050268df'
branch_labels: Union[str, Sequence[str], None] = None
depends_on: Union[str, Sequence[str], None] = None


def upgrade() -> None:
    """Upgrade schema."""
    # ### commands auto generated by Alembic - please adjust! ###
    
    # First, drop the column since we can't convert text to jsonb easily
    # (existing data will be lost, but user said not to worry about backward compatibility)
    op.drop_column('trace', 'reasoning_effort')
    op.drop_column('trace', 'reasoning')
    
    # Re-add the column with the correct type
    op.add_column('trace', 
        sa.Column('reasoning', 
                  sa.JSON().with_variant(postgresql.JSONB(astext_type=sa.Text()), 'postgresql'),
                  nullable=True)
    )
    # ### end Alembic commands ###


def downgrade() -> None:
    """Downgrade schema."""
    # ### commands auto generated by Alembic - please adjust! ###
    
    # Drop the JSONB column
    op.drop_column('trace', 'reasoning')
    
    # Re-add both columns with original types
    op.add_column('trace', sa.Column('reasoning_effort', sa.VARCHAR(length=50), autoincrement=False, nullable=True))
    op.add_column('trace', sa.Column('reasoning', sa.TEXT(), autoincrement=False, nullable=True))
    # ### end Alembic commands ###
