"""add_implementation_versions_to_tasks

Revision ID: dd2f7ffcfe5a
Revises: 15713a389320
Create Date: 2025-10-22 13:26:29.667959

"""
from collections.abc import Sequence

import sqlalchemy as sa
from alembic import op
from sqlalchemy.dialects import postgresql

# revision identifiers, used by Alembic.
revision: str = "dd2f7ffcfe5a"
down_revision: str | Sequence[str] | None = "15713a389320"
branch_labels: str | Sequence[str] | None = None
depends_on: str | Sequence[str] | None = None


def upgrade() -> None:
    """Upgrade schema."""
    # ### commands auto generated by Alembic - please adjust! ###
    op.create_table("implementation",
    sa.Column("id", sa.Integer(), autoincrement=True, nullable=False),
    sa.Column("task_id", sa.Integer(), nullable=False),
    sa.Column("version", sa.String(length=50), nullable=False),
    sa.Column("prompt", sa.Text(), nullable=False),
    sa.Column("model", sa.String(length=255), nullable=False),
    sa.Column("temperature", sa.Float(), nullable=True),
    sa.Column("reasoning", sa.JSON().with_variant(postgresql.JSONB(astext_type=sa.Text()), "postgresql"), nullable=True),
    sa.Column("tools", sa.JSON().with_variant(postgresql.JSONB(astext_type=sa.Text()), "postgresql"), nullable=True),
    sa.Column("tool_choice", sa.JSON().with_variant(postgresql.JSONB(astext_type=sa.Text()), "postgresql"), nullable=True),
    sa.Column("response_schema", sa.JSON().with_variant(postgresql.JSONB(astext_type=sa.Text()), "postgresql"), nullable=True),
    sa.Column("max_output_tokens", sa.Integer(), nullable=False),
    sa.Column("created_at", sa.DateTime(timezone=True), server_default=sa.text("now()"), nullable=False),
    sa.Column("updated_at", sa.DateTime(timezone=True), server_default=sa.text("now()"), nullable=False),
    sa.ForeignKeyConstraint(["task_id"], ["task.id"], name=op.f("fk_implementation_task_id_task"), ondelete="CASCADE"),
    sa.PrimaryKeyConstraint("id", name=op.f("pk_implementation")),
    )
    op.create_index("ix_implementation_model", "implementation", ["model"], unique=False)
    op.create_index("ix_implementation_task_id", "implementation", ["task_id"], unique=False)
    op.add_column("task", sa.Column("production_version_id", sa.Integer(), nullable=True))
    op.drop_index(op.f("ix_task_model"), table_name="task")
    op.create_index("ix_task_production_version_id", "task", ["production_version_id"], unique=False)
    op.create_foreign_key(op.f("fk_task_production_version_id_implementation"), "task", "implementation", ["production_version_id"], ["id"], ondelete="SET NULL")
    op.drop_column("task", "model")
    op.drop_column("task", "tool_choice")
    op.drop_column("task", "response_schema")
    op.drop_column("task", "reasoning")
    op.drop_column("task", "tools")
    op.drop_column("task", "instructions")
    op.drop_column("task", "temperature")
    op.drop_column("task", "prompt")
    # ### end Alembic commands ###


def downgrade() -> None:
    """Downgrade schema."""
    # ### commands auto generated by Alembic - please adjust! ###
    op.add_column("task", sa.Column("prompt", sa.TEXT(), autoincrement=False, nullable=False))
    op.add_column("task", sa.Column("temperature", sa.DOUBLE_PRECISION(precision=53), autoincrement=False, nullable=True))
    op.add_column("task", sa.Column("instructions", sa.TEXT(), autoincrement=False, nullable=True))
    op.add_column("task", sa.Column("tools", postgresql.JSONB(astext_type=sa.Text()), autoincrement=False, nullable=True))
    op.add_column("task", sa.Column("reasoning", postgresql.JSONB(astext_type=sa.Text()), autoincrement=False, nullable=True))
    op.add_column("task", sa.Column("response_schema", postgresql.JSONB(astext_type=sa.Text()), autoincrement=False, nullable=True))
    op.add_column("task", sa.Column("tool_choice", postgresql.JSONB(astext_type=sa.Text()), autoincrement=False, nullable=True))
    op.add_column("task", sa.Column("model", sa.VARCHAR(length=255), autoincrement=False, nullable=False))
    op.drop_constraint(op.f("fk_task_production_version_id_implementation"), "task", type_="foreignkey")
    op.drop_index("ix_task_production_version_id", table_name="task")
    op.create_index(op.f("ix_task_model"), "task", ["model"], unique=False)
    op.drop_column("task", "production_version_id")
    op.drop_index("ix_implementation_task_id", table_name="implementation")
    op.drop_index("ix_implementation_model", table_name="implementation")
    op.drop_table("implementation")
    # ### end Alembic commands ###
