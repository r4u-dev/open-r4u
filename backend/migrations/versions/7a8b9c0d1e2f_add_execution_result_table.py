"""add_execution_result_table

Revision ID: 7a8b9c0d1e2f
Revises: 6e7f0392eb1e
Create Date: 2025-10-22 10:00:00.000000

"""
from typing import Sequence, Union

from alembic import op
import sqlalchemy as sa
from sqlalchemy.dialects import postgresql

# revision identifiers, used by Alembic.
revision: str = '7a8b9c0d1e2f'
down_revision: Union[str, Sequence[str], None] = '105bd027cb07'
branch_labels: Union[str, Sequence[str], None] = None
depends_on: Union[str, Sequence[str], None] = None


def upgrade() -> None:
    """Upgrade schema."""
    # ### commands auto generated by Alembic - please adjust! ###
    op.create_table('execution_result',
    sa.Column('id', sa.Integer(), autoincrement=True, nullable=False),
    sa.Column('task_id', sa.Integer(), nullable=False),
    sa.Column('implementation_id', sa.Integer(), nullable=False),
    sa.Column('started_at', sa.DateTime(timezone=True), nullable=False),
    sa.Column('completed_at', sa.DateTime(timezone=True), nullable=True),
    sa.Column('prompt_rendered', sa.Text(), nullable=False),
    sa.Column('variables', sa.JSON().with_variant(postgresql.JSONB(astext_type=sa.Text()), 'postgresql'), nullable=True),
    sa.Column('input', sa.JSON().with_variant(postgresql.JSONB(astext_type=sa.Text()), 'postgresql'), nullable=True),
    sa.Column('result_text', sa.Text(), nullable=True),
    sa.Column('result_json', sa.JSON().with_variant(postgresql.JSONB(astext_type=sa.Text()), 'postgresql'), nullable=True),
    sa.Column('tool_calls', sa.JSON().with_variant(postgresql.JSONB(astext_type=sa.Text()), 'postgresql'), nullable=True),
    sa.Column('error', sa.Text(), nullable=True),
    sa.Column('finish_reason', sa.Enum('STOP', 'LENGTH', 'TOOL_CALLS', 'CONTENT_FILTER', 'FUNCTION_CALL', name='finishreason'), nullable=True),
    sa.Column('prompt_tokens', sa.Integer(), nullable=True),
    sa.Column('completion_tokens', sa.Integer(), nullable=True),
    sa.Column('total_tokens', sa.Integer(), nullable=True),
    sa.Column('cached_tokens', sa.Integer(), nullable=True),
    sa.Column('reasoning_tokens', sa.Integer(), nullable=True),
    sa.Column('system_fingerprint', sa.String(length=255), nullable=True),
    sa.Column('provider_response', sa.JSON().with_variant(postgresql.JSONB(astext_type=sa.Text()), 'postgresql'), nullable=True),
    sa.Column('created_at', sa.DateTime(timezone=True), server_default=sa.text('now()'), nullable=False),
    sa.Column('updated_at', sa.DateTime(timezone=True), server_default=sa.text('now()'), nullable=False),
    sa.ForeignKeyConstraint(['task_id'], ['task.id'], name=op.f('fk_execution_result_task_id_task'), ondelete='CASCADE'),
    sa.ForeignKeyConstraint(['implementation_id'], ['implementation.id'], name=op.f('fk_execution_result_implementation_id_implementation'), ondelete='CASCADE'),
    sa.PrimaryKeyConstraint('id', name=op.f('pk_execution_result'))
    )
    op.create_index('ix_execution_result_created_at', 'execution_result', ['created_at'], unique=False)
    op.create_index('ix_execution_result_implementation_id', 'execution_result', ['implementation_id'], unique=False)
    op.create_index('ix_execution_result_task_id', 'execution_result', ['task_id'], unique=False)
    
    # Add temp column to implementation table
    op.add_column('implementation', sa.Column('temp', sa.Boolean(), nullable=False, server_default='false'))
    # ### end Alembic commands ###


def downgrade() -> None:
    """Downgrade schema."""
    # ### commands auto generated by Alembic - please adjust! ###
    op.drop_index('ix_execution_result_task_id', table_name='execution_result')
    op.drop_index('ix_execution_result_implementation_id', table_name='execution_result')
    op.drop_index('ix_execution_result_created_at', table_name='execution_result')
    op.drop_table('execution_result')
    op.drop_column('implementation', 'temp')
    # ### end Alembic commands ###

