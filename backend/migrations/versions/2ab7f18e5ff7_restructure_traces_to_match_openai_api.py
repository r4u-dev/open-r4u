"""restructure_traces_to_match_openai_api

Revision ID: 2ab7f18e5ff7
Revises: 
Create Date: 2025-10-17 15:28:15.330107

"""
from collections.abc import Sequence

import sqlalchemy as sa
from alembic import op
from sqlalchemy.dialects import postgresql

# revision identifiers, used by Alembic.
revision: str = "2ab7f18e5ff7"
down_revision: str | Sequence[str] | None = None
branch_labels: str | Sequence[str] | None = None
depends_on: str | Sequence[str] | None = None


def upgrade() -> None:
    """Upgrade schema."""
    # ### commands auto generated by Alembic - please adjust! ###
    op.create_table("project",
    sa.Column("id", sa.Integer(), autoincrement=True, nullable=False),
    sa.Column("name", sa.String(length=255), nullable=False),
    sa.Column("description", sa.String(length=500), nullable=True),
    sa.Column("created_at", sa.DateTime(timezone=True), server_default=sa.text("now()"), nullable=False),
    sa.Column("updated_at", sa.DateTime(timezone=True), server_default=sa.text("now()"), nullable=False),
    sa.PrimaryKeyConstraint("id", name=op.f("pk_project")),
    sa.UniqueConstraint("name", name=op.f("uq_project_name")),
    )
    op.create_index("ix_project_name", "project", ["name"], unique=True)
    op.create_table("task",
    sa.Column("id", sa.Integer(), autoincrement=True, nullable=False),
    sa.Column("project_id", sa.Integer(), nullable=False),
    sa.Column("prompt", sa.Text(), nullable=False),
    sa.Column("tools", sa.JSON().with_variant(postgresql.JSONB(astext_type=sa.Text()), "postgresql"), nullable=True),
    sa.Column("model", sa.String(length=255), nullable=False),
    sa.Column("response_schema", sa.JSON().with_variant(postgresql.JSONB(astext_type=sa.Text()), "postgresql"), nullable=True),
    sa.Column("created_at", sa.DateTime(timezone=True), server_default=sa.text("now()"), nullable=False),
    sa.Column("updated_at", sa.DateTime(timezone=True), server_default=sa.text("now()"), nullable=False),
    sa.ForeignKeyConstraint(["project_id"], ["project.id"], name=op.f("fk_task_project_id_project"), ondelete="CASCADE"),
    sa.PrimaryKeyConstraint("id", name=op.f("pk_task")),
    )
    op.create_index("ix_task_model", "task", ["model"], unique=False)
    op.create_index("ix_task_project_id", "task", ["project_id"], unique=False)
    op.create_table("trace",
    sa.Column("id", sa.Integer(), autoincrement=True, nullable=False),
    sa.Column("project_id", sa.Integer(), nullable=False),
    sa.Column("task_id", sa.Integer(), nullable=True),
    sa.Column("model", sa.String(length=255), nullable=False),
    sa.Column("result", sa.Text(), nullable=True),
    sa.Column("error", sa.Text(), nullable=True),
    sa.Column("path", sa.String(length=255), nullable=True),
    sa.Column("started_at", sa.DateTime(timezone=True), nullable=False),
    sa.Column("completed_at", sa.DateTime(timezone=True), nullable=True),
    sa.Column("prompt_tokens", sa.Integer(), nullable=True),
    sa.Column("completion_tokens", sa.Integer(), nullable=True),
    sa.Column("total_tokens", sa.Integer(), nullable=True),
    sa.Column("cached_tokens", sa.Integer(), nullable=True),
    sa.Column("reasoning_tokens", sa.Integer(), nullable=True),
    sa.Column("finish_reason", sa.Enum("STOP", "LENGTH", "TOOL_CALLS", "CONTENT_FILTER", "FUNCTION_CALL", "ERROR", name="finish_reason"), nullable=True),
    sa.Column("system_fingerprint", sa.String(length=255), nullable=True),
    sa.Column("reasoning_effort", sa.String(length=50), nullable=True),
    sa.Column("response_schema", sa.JSON().with_variant(postgresql.JSONB(astext_type=sa.Text()), "postgresql"), nullable=True),
    sa.Column("trace_metadata", sa.JSON().with_variant(postgresql.JSONB(astext_type=sa.Text()), "postgresql"), nullable=True),
    sa.Column("tools", sa.JSON().with_variant(postgresql.JSONB(astext_type=sa.Text()), "postgresql"), nullable=True),
    sa.Column("created_at", sa.DateTime(timezone=True), server_default=sa.text("now()"), nullable=False),
    sa.Column("updated_at", sa.DateTime(timezone=True), server_default=sa.text("now()"), nullable=False),
    sa.ForeignKeyConstraint(["project_id"], ["project.id"], name=op.f("fk_trace_project_id_project"), ondelete="CASCADE"),
    sa.ForeignKeyConstraint(["task_id"], ["task.id"], name=op.f("fk_trace_task_id_task"), ondelete="SET NULL"),
    sa.PrimaryKeyConstraint("id", name=op.f("pk_trace")),
    )
    op.create_index("ix_trace_finish_reason", "trace", ["finish_reason"], unique=False)
    op.create_index("ix_trace_model", "trace", ["model"], unique=False)
    op.create_index("ix_trace_project_id", "trace", ["project_id"], unique=False)
    op.create_index("ix_trace_started_at", "trace", ["started_at"], unique=False)
    op.create_index("ix_trace_task_id", "trace", ["task_id"], unique=False)
    op.create_table("trace_input_item",
    sa.Column("id", sa.Integer(), autoincrement=True, nullable=False),
    sa.Column("trace_id", sa.Integer(), nullable=False),
    sa.Column("type", sa.Enum("MESSAGE", "FUNCTION_CALL", "FUNCTION_RESULT", "TOOL_CALL", "TOOL_RESULT", "IMAGE", "VIDEO", "AUDIO", "MCP_TOOL_CALL", "MCP_TOOL_RESULT", name="item_type"), nullable=False),
    sa.Column("data", sa.JSON().with_variant(postgresql.JSONB(astext_type=sa.Text()), "postgresql"), nullable=False),
    sa.Column("position", sa.Integer(), nullable=False),
    sa.Column("created_at", sa.DateTime(timezone=True), server_default=sa.text("now()"), nullable=False),
    sa.Column("updated_at", sa.DateTime(timezone=True), server_default=sa.text("now()"), nullable=False),
    sa.ForeignKeyConstraint(["trace_id"], ["trace.id"], name=op.f("fk_trace_input_item_trace_id_trace"), ondelete="CASCADE"),
    sa.PrimaryKeyConstraint("id", name=op.f("pk_trace_input_item")),
    )
    op.create_index("ix_trace_input_item_trace_id_position", "trace_input_item", ["trace_id", "position"], unique=True)
    op.create_index("ix_trace_input_item_type", "trace_input_item", ["type"], unique=False)
    # ### end Alembic commands ###


def downgrade() -> None:
    """Downgrade schema."""
    # ### commands auto generated by Alembic - please adjust! ###
    op.drop_index("ix_trace_input_item_type", table_name="trace_input_item")
    op.drop_index("ix_trace_input_item_trace_id_position", table_name="trace_input_item")
    op.drop_table("trace_input_item")
    op.drop_index("ix_trace_task_id", table_name="trace")
    op.drop_index("ix_trace_started_at", table_name="trace")
    op.drop_index("ix_trace_project_id", table_name="trace")
    op.drop_index("ix_trace_model", table_name="trace")
    op.drop_index("ix_trace_finish_reason", table_name="trace")
    op.drop_table("trace")
    op.drop_index("ix_task_project_id", table_name="task")
    op.drop_index("ix_task_model", table_name="task")
    op.drop_table("task")
    op.drop_index("ix_project_name", table_name="project")
    op.drop_table("project")
    # ### end Alembic commands ###
