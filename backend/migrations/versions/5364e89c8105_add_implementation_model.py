"""add_implementation_model

Revision ID: 5364e89c8105
Revises: 15713a389320
Create Date: 2025-10-21 20:18:24.138974

"""
from typing import Sequence, Union

from alembic import op
import sqlalchemy as sa
from sqlalchemy.dialects import postgresql

# revision identifiers, used by Alembic.
revision: str = '5364e89c8105'
down_revision: Union[str, Sequence[str], None] = '15713a389320'
branch_labels: Union[str, Sequence[str], None] = None
depends_on: Union[str, Sequence[str], None] = None


def upgrade() -> None:
    """Upgrade schema."""
    # ### commands auto generated by Alembic - please adjust! ###
    op.create_table('implementation',
    sa.Column('id', sa.Integer(), autoincrement=True, nullable=False),
    sa.Column('version', sa.String(length=50), nullable=False),
    sa.Column('prompt', sa.Text(), nullable=False),
    sa.Column('model', sa.String(length=255), nullable=False),
    sa.Column('temperature', sa.Float(), nullable=True),
    sa.Column('reasoning', sa.JSON().with_variant(postgresql.JSONB(astext_type=sa.Text()), 'postgresql'), nullable=True),
    sa.Column('tools', sa.JSON().with_variant(postgresql.JSONB(astext_type=sa.Text()), 'postgresql'), nullable=True),
    sa.Column('tool_choice', sa.JSON().with_variant(postgresql.JSONB(astext_type=sa.Text()), 'postgresql'), nullable=True),
    sa.Column('response_schema', sa.JSON().with_variant(postgresql.JSONB(astext_type=sa.Text()), 'postgresql'), nullable=True),
    sa.Column('max_output_tokens', sa.Integer(), nullable=False),
    sa.Column('created_at', sa.DateTime(timezone=True), server_default=sa.text('now()'), nullable=False),
    sa.Column('updated_at', sa.DateTime(timezone=True), server_default=sa.text('now()'), nullable=False),
    sa.PrimaryKeyConstraint('id', name=op.f('pk_implementation'))
    )
    op.create_index('ix_implementation_model', 'implementation', ['model'], unique=False)
    op.add_column('task', sa.Column('implementation_id', sa.Integer(), nullable=False))
    op.drop_index(op.f('ix_task_model'), table_name='task')
    op.create_index('ix_task_implementation_id', 'task', ['implementation_id'], unique=False)
    op.create_foreign_key(op.f('fk_task_implementation_id_implementation'), 'task', 'implementation', ['implementation_id'], ['id'], ondelete='CASCADE')
    op.drop_column('task', 'instructions')
    op.drop_column('task', 'temperature')
    op.drop_column('task', 'response_schema')
    op.drop_column('task', 'tool_choice')
    op.drop_column('task', 'prompt')
    op.drop_column('task', 'model')
    op.drop_column('task', 'reasoning')
    op.drop_column('task', 'tools')
    # ### end Alembic commands ###


def downgrade() -> None:
    """Downgrade schema."""
    # ### commands auto generated by Alembic - please adjust! ###
    op.add_column('task', sa.Column('tools', postgresql.JSONB(astext_type=sa.Text()), autoincrement=False, nullable=True))
    op.add_column('task', sa.Column('reasoning', postgresql.JSONB(astext_type=sa.Text()), autoincrement=False, nullable=True))
    op.add_column('task', sa.Column('model', sa.VARCHAR(length=255), autoincrement=False, nullable=False))
    op.add_column('task', sa.Column('prompt', sa.TEXT(), autoincrement=False, nullable=False))
    op.add_column('task', sa.Column('tool_choice', postgresql.JSONB(astext_type=sa.Text()), autoincrement=False, nullable=True))
    op.add_column('task', sa.Column('response_schema', postgresql.JSONB(astext_type=sa.Text()), autoincrement=False, nullable=True))
    op.add_column('task', sa.Column('temperature', sa.DOUBLE_PRECISION(precision=53), autoincrement=False, nullable=True))
    op.add_column('task', sa.Column('instructions', sa.TEXT(), autoincrement=False, nullable=True))
    op.drop_constraint(op.f('fk_task_implementation_id_implementation'), 'task', type_='foreignkey')
    op.drop_index('ix_task_implementation_id', table_name='task')
    op.create_index(op.f('ix_task_model'), 'task', ['model'], unique=False)
    op.drop_column('task', 'implementation_id')
    op.drop_index('ix_implementation_model', table_name='implementation')
    op.drop_table('implementation')
    # ### end Alembic commands ###
