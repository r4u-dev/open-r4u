"""add_optimization_model

Revision ID: 53914fdc7590
Revises: 37309a4b1b2f
Create Date: 2025-10-31 20:35:10.057534

"""
from typing import Sequence, Union

from alembic import op
import sqlalchemy as sa
from sqlalchemy.dialects import postgresql

# revision identifiers, used by Alembic.
revision: str = '53914fdc7590'
down_revision: Union[str, Sequence[str], None] = '37309a4b1b2f'
branch_labels: Union[str, Sequence[str], None] = None
depends_on: Union[str, Sequence[str], None] = None


def upgrade() -> None:
    """Upgrade schema."""
    # ### commands auto generated by Alembic - please adjust! ###
    op.create_table('optimization',
    sa.Column('id', sa.Integer(), autoincrement=True, nullable=False),
    sa.Column('task_id', sa.Integer(), nullable=False),
    sa.Column('status', sa.Enum('PENDING', 'RUNNING', 'COMPLETED', 'FAILED', name='optimization_status'), nullable=False),
    sa.Column('started_at', sa.DateTime(timezone=True), nullable=True),
    sa.Column('completed_at', sa.DateTime(timezone=True), nullable=True),
    sa.Column('error', sa.Text(), nullable=True),
    sa.Column('max_iterations', sa.Integer(), nullable=False),
    sa.Column('changeable_fields', sa.JSON().with_variant(postgresql.JSONB(astext_type=sa.Text()), 'postgresql'), nullable=False),
    sa.Column('max_consecutive_no_improvements', sa.Integer(), nullable=False),
    sa.Column('iterations_run', sa.Integer(), nullable=False),
    sa.Column('current_iteration', sa.Integer(), nullable=True),
    sa.Column('best_implementation_id', sa.Integer(), nullable=True),
    sa.Column('best_score', sa.Float(), nullable=True),
    sa.Column('iterations', sa.JSON().with_variant(postgresql.JSONB(astext_type=sa.Text()), 'postgresql'), nullable=False),
    sa.Column('created_at', sa.DateTime(timezone=True), server_default=sa.text('now()'), nullable=False),
    sa.Column('updated_at', sa.DateTime(timezone=True), server_default=sa.text('now()'), nullable=False),
    sa.ForeignKeyConstraint(['best_implementation_id'], ['implementation.id'], name=op.f('fk_optimization_best_implementation_id_implementation'), ondelete='SET NULL'),
    sa.ForeignKeyConstraint(['task_id'], ['task.id'], name=op.f('fk_optimization_task_id_task'), ondelete='CASCADE'),
    sa.PrimaryKeyConstraint('id', name=op.f('pk_optimization'))
    )
    op.create_index('ix_optimization_started_at', 'optimization', ['started_at'], unique=False)
    op.create_index('ix_optimization_status', 'optimization', ['status'], unique=False)
    op.create_index('ix_optimization_task_id', 'optimization', ['task_id'], unique=False)
    op.drop_index(op.f('ix_execution_result_evaluation_id'), table_name='execution_result')
    op.drop_index(op.f('ix_execution_result_test_case_id'), table_name='execution_result')
    # ### end Alembic commands ###


def downgrade() -> None:
    """Downgrade schema."""
    # ### commands auto generated by Alembic - please adjust! ###
    op.create_index(op.f('ix_execution_result_test_case_id'), 'execution_result', ['test_case_id'], unique=False)
    op.create_index(op.f('ix_execution_result_evaluation_id'), 'execution_result', ['evaluation_id'], unique=False)
    op.drop_index('ix_optimization_task_id', table_name='optimization')
    op.drop_index('ix_optimization_status', table_name='optimization')
    op.drop_index('ix_optimization_started_at', table_name='optimization')
    op.drop_table('optimization')
    # ### end Alembic commands ###
